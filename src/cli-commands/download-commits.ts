import * as fs from "fs";
import { UserError } from "../util";
import * as bcvesFromCLI from "../bcves-from-cli";
import { Config } from "../persistent-types";
import * as repositories from "../repositories";

export default async (
  config: Config,
  args: {
    anonymous: boolean;
    selectors: string[];
    allow_incomplete: boolean;
    non_fatal_validation_errors: boolean;
  }
) => {
  if (
    fs.existsSync(config.sources) &&
    !fs.lstatSync(config.sources).isDirectory
  ) {
    throw new UserError(
      `Sources directory ${config.results} is not a directory`
    );
  }
  let errors: string[] = [];
  for (const bcve of await bcvesFromCLI.getBCVEs(config, args, true)) {
    repositories.downloadCommitsForCVE(
      bcve,
      args.anonymous,
      config["canonical-repositories-root"],
      function logError(msg: string) {
        console.error(msg);
        errors.push(msg);
      }
    );
  }
  if (errors.length > 0) {
    console.error("Download errors:");
    errors.forEach(e => console.error(`  ${e}`));
  }
};
